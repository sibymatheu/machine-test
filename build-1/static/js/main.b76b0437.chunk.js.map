{"version":3,"sources":["components/filter/filter.module.scss","util/api.ts","config/config.ts","components/chart/chart.tsx","components/header/index.tsx","components/filter/index.tsx","util/dateFormat.ts","App.tsx","hooks/pollution.tsx","reportWebVitals.ts","index.tsx","App.module.scss","components/header/header.module.scss"],"names":["module","exports","_path","path","query","queryString","Object","keys","length","key","getData","params","callback","a","fetch","response","status","json","pollution","MONTHS","split","NAME","dateStr","includeMonth","date","Date","isNaN","getTime","_date","getDate","getMonth","toString","Chart","data","name","pollutionData","res","map","item","local","hasOwnProperty","parameter","value","items","index","push","FORMAT_DATA","style","width","height","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","minPointSize","stackId","fill","Header","className","header","title","sub_heading","Filter","defaultValues","onChange","filter","input_wrapper","label","input","type","defaultValue","date_from","placeholder","date_to","formatDate","d","month","day","year","getFullYear","join","App","useState","isLoading","setLoading","setData","usePollution","fetchPollution","setDate","setFilter","useEffect","event","currentTarget","results","chart_wrapper","overlay","spinner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b76b0437.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__3JVBF\",\"input_wrapper\":\"filter_input_wrapper__15gsZ\",\"label\":\"filter_label__1UtrG\",\"input\":\"filter_input__1aB1y\"};","import { API_URL } from \"../config/config\";\r\nconst _path = (path: string, query?: any): string => {\r\n    var queryString = ``;\r\n    if (query && Object.keys(query).length > 0) {\r\n        for (var key in query) {\r\n            queryString += `&${key}=${query[key]}`;\r\n        }\r\n    }\r\n    return (`${path}${queryString ? queryString : ''}`);\r\n}\r\nexport const getData = async (params: any, callback: (res: any) => void) => {\r\n    let response = await fetch(_path(API_URL, params));\r\n    if (response.status === 200) {\r\n        let pollution = await response.json();\r\n        callback(pollution);\r\n    } else {\r\n        callback(null);\r\n    }\r\n}","export const API_URL = `https://u50g7n0cbj.execute-api.us-east-1.amazonaws.com/v2/measurements?limit=100&page=1&offset=0&sort=asc&country_id=IN&city=Kochi&order_by=datetime&radius=10&date_from=2000-01-01T00%3A00%3A00%2B00%3A00&date_to=2021-06-27T04%3A45%3A00%2B00%3A00` ;","\r\nimport React from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nconst FORMAT_DATA = (data: any) => {\r\n    if (!data || !data.length) {\r\n        return [];\r\n    }\r\n    let res: any = {};\r\n    data.map((item: any) => {\r\n        let date = item.date.local;\r\n        if (!res.hasOwnProperty(date)) {\r\n            res[date] = {};\r\n        }\r\n        res[date][item.parameter] = item.value;\r\n    });\r\n    let items = [];\r\n    let index = 0;\r\n    for (var key in res) {\r\n        items.push({\r\n            name: NAME(key, index === 0),\r\n            ...(res[key])\r\n        });\r\n        index++;\r\n    }\r\n    return items;\r\n}\r\nconst MONTHS = \"January February March April May June July August September October November December\".split(\" \");\r\nconst NAME = (dateStr: string, includeMonth?: boolean): string => {\r\n    var date = new Date(dateStr);\r\n    if (isNaN(date.getTime())) {\r\n        return '-';\r\n    }\r\n    let _date = date.getDate();\r\n    if (_date === 1 || includeMonth) {\r\n        return `${MONTHS[date.getMonth()]} ${_date}`;\r\n    }\r\n    return _date.toString();\r\n}\r\nexport const Chart: React.FC<{ data: any, name: string }> = ({ data, name }) => {\r\n    const pollutionData = FORMAT_DATA(data);\r\n    return <div style={{ width: '100%', height: 400 }}>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n                width={500}\r\n                height={300}\r\n                data={pollutionData}\r\n                margin={{\r\n                    top: 20,\r\n                    right: 0,\r\n                    left: 0,\r\n                    bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey={name} minPointSize={8} stackId={name} fill={`#010f74`} />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport style from \"./header.module.scss\";\r\nexport const Header: React.FC = () => {\r\n    return <div className={style.header}>\r\n        <div className={style.title}>Pollution Data</div>\r\n        <div className={style.sub_heading}>City : India, Kochi</div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport style from \"./filter.module.scss\";\r\nexport const Filter: React.FC<{ onChange: (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => void, defaultValues: any }> = ({ defaultValues, onChange }) => {\r\n    return <div className={style.filter}>\r\n        <div className={style.input_wrapper}>\r\n            <div className={style.label}>Date From</div>\r\n            <div className={style.input}>\r\n                <input type=\"date\" defaultValue={defaultValues.date_from} name=\"date_from\" placeholder=\"from\" onChange={onChange} />\r\n            </div>\r\n        </div>\r\n        <div className={style.input_wrapper}>\r\n            <div className={style.label}>Date To</div>\r\n            <div className={style.input}>\r\n                <input type=\"date\" name=\"date_to\" defaultValue={defaultValues.date_to} placeholder=\"to\" onChange={onChange} />\r\n            </div>\r\n        </div>\r\n        <div className={style.input_wrapper}>\r\n            <div className={style.label}>Parameter</div>\r\n            <div className={style.input}>\r\n                <select name=\"parameter\" onChange={onChange}>\r\n                    <option value=\"co\">CO</option>\r\n                    <option value=\"so2\">SO2</option>\r\n                    <option value=\"no2\">no2</option>\r\n                    <option value=\"o3\">o3</option>\r\n                    <option value=\"pm25\">pm25</option>\r\n                    <option value=\"pm25\">pm25</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n}","export const formatDate = (date: any) => {\r\n    var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n  \r\n    if (month.length < 2)\r\n      month = '0' + month;\r\n    if (day.length < 2)\r\n      day = '0' + day;\r\n    return [year, month, day].join('-');\r\n  }","import React, { useState, useEffect } from 'react';\nimport usePollution from \"./hooks/pollution\";\nimport { Chart } from \"./components/chart/chart\";\nimport style from \"./App.module.scss\";\nimport { Header } from \"./components/header\";\nimport { Filter } from \"./components/filter\";\nimport { formatDate } from \"./util/dateFormat\";\nfunction App() {\n  const [{ data, isLoading }, fetchPollution]: any = usePollution();\n  let date = new Date();\n  date.setDate(date.getDate() - 30);\n  const [filter, setFilter] = useState({\n    parameter: 'co',\n    date_from: formatDate(date),\n    date_to: formatDate(new Date())\n  });\n  const onChange = (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n    var name = event.currentTarget.name;\n    setFilter({\n      ...filter,\n      [name]: event.currentTarget.value,\n    });\n  }\n  useEffect(() => {\n    fetchPollution(filter);\n  }, [filter]);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Filter onChange={onChange} defaultValues={filter} />\n      { data && data.results && <div className={style.chart_wrapper}>\n        { isLoading && <div className={style.overlay}></div>}\n        <Chart data={data.results} name={filter.parameter} />\n      </div>}\n      {(!data || !data.results ) && isLoading && <div className={style.spinner}>Fetching Details...</div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState ,useEffect } from \"react\";\r\nimport {API_URL } from \"../config/config\" ;\r\nimport { getData } from \"../util/api\" ;\r\nexport default function usePollution() {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    function fetchData( params? : any ) {\r\n        setLoading(true);\r\n        getData( params ? params : {},( res : any  )=>{\r\n            setLoading( false );\r\n            setData( res? res : {} );\r\n        });\r\n    }\r\n    return [{\r\n        data ,\r\n        isLoading\r\n    }, fetchData];\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart_wrapper\":\"App_chart_wrapper__2YrfQ\",\"overlay\":\"App_overlay__2z0n5\",\"spinner\":\"App_spinner__1i0FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2KJpt\",\"title\":\"header_title__1q2T1\",\"sub_heading\":\"header_sub_heading__LBJnt\"};"],"sourceRoot":""}